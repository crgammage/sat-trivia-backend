# This file should contain all the record creation needed to seed the database with its default values.
# The data can then be loaded with the rails db:seed command (or created alongside the database with db:setup).
#
# Examples:
#
#   movies = Movie.create([{ name: 'Star Wars' }, { name: 'Lord of the Rings' }])
#   Character.create(name: 'Luke', movie: movies.first)


christa = User.create(name: "Christa", username: "crgammage", password: "boyton")
hailey = User.create(name: "Hailey", username: "hcassidy", password: "toaster")
ivan = User.create(name: "Ivan", username: "toastyfins", password: "nugget")
lola = User.create(name: "Lola", username: "lolagirl", password: "kitty")

game1 = Game.create
game2 = Game.create

UserGame.create(game: game1, user: christa)
UserGame.create(game: game1, user: hailey)
UserGame.create(game: game2, user: ivan)
UserGame.create(game: game2, user: lola)

question1 = Question.create(prompt: "If (x-1) / 3 = k and k = 3, what is the value of x?", a: "A. 2", b: "B. 4", c: "C. 9", d: "D. 10", answer: "D. 10", points: 5)
question2 = Question.create(prompt: "On Saturday afternoon, Armand sent m text messages each hour for 5 hours, and Tyrone sent p text messages each hour for 4 hours. Which of the following represents the total number of messages sent by Armand and Tyrone on Saturday afternoon?", a: "A. 9mp", b: "B. 20mp", c: "C. 5m + 4p", d: "D. 4m + 5p", answer: "A. 9mp", points: 5)
question3 = Question.create(prompt: "For i = √−1, what is the sum (7 + 3i) + (−8 + 9i)?", a: "A. −1 + 12i", b: "B. -1 - 6i", c: "C. 15 + 12i", d: "D. 15 - 6i", answer: "C. 15 + 12i", points: 5)
question4 = Question.create(prompt: "Kathy is a repair technician for a phone company. Each week, she receives a batch of phones that need repairs. The number of phones that she has left to fix at the end of each day can be estimated with the equation P = 108 − 23d, where P is the number of phones left and d is the number of days she has worked that week. What is the meaning of the value 108 in this equation?", a: "A. Kathy will complete the repairs within 108 days.", b: "B. Kathy starts each week with 108 phones to fix.", c: "C. Kathy repairs phones at a rate of 108 per hour.", d: "D. Kathy repairs phones at a rate of 108 per day.", answer: "B. Kathy starts each week with 108 phones to fix.", points: 5)
question5 = Question.create(prompt: "Which of the following is equivalent to this expression: (x^2y − 3y^2 + 5xy^2) − (−x^2y + 3xy^2 − 3y^2)?", a: "A. 4x^2y^2", b: "B. 8xy^2−6y^2", c: "C. 2x^2y+2xy^2", d: "D. 2x^2y+8xy^2−6y^2", answer: "C. 2x^2y+2xy^2", points: 10)
question6 = Question.create(prompt: "(h = 3a+28.6) A pediatrician uses this model to estimate the height h of a boy, in inches, in terms of the boy’s age a, in years, between the ages of 2 and 5. Based on the model, what is the estimated increase, in inches, of a boy's height each year?", a: "A. 3", b: "B. 5.7", c: "C. 9.5", d: "D. 14.3", answer: "A. 3", points: 10)
question7 = Question.create(prompt: "If (a/b) = 2, what is the value of (4b/a)?", a: "A. 0", b: "B. 1", c: "C. 2", d: "D. 4", answer: "C. 2", points: 10)
question8 = Question.create(prompt: "Given (b = 2.35 + 0.25x) and (c = 1.75 + 0.40x), b and c represent the price per pound, in dollars, of beef and chicken, respectively, x weeks after July 1 during last summer. What was the price per pound of beef when it was equal to the price per pound of chicken?", a: "A. $2.60", b: "B. 2.85", c: "C. $2.95", d: "D. $3.35", answer: "D. $3.35", points: 15)
question9 = Question.create(prompt: "Given (3x + 4y = −23) and (2y − x = −19), what is the solution (x, y) to the system of equations above?", a: "A. (−5, −2)", b: "B. (3,−8)", c: "C. (4,−6)", d: "D. (9,−6)", answer: "B. (3,-8)", points: 15)
question10 = Question.create(prompt: "(g(x) = ax^2 + 24) For this function g, a is a constant and g(4) = 8. What is the value of g(−4) ?", a: "A. 8", b: "B. 0", c: "C. -1", d: "D. -8", answer: "A. 8", points: 15)
question11 = Question.create(prompt: "A line in the x/y-plane passes through the origin and 1 has a slope of 7. Which of the following points lies on the line?", a: "A. (0, 7)", b: "B. (1, 7)", c: "C. (7, 7)", d: "D. (14,2)", answer: "D. (14,2)", points: 15)
question12 = Question.create(prompt: "If (ax+2)(bx+7)=15x^2+cx+14 for all values of x, and a+b=8 ,what are the two possible values for c ?", a: "A. 3 and 5", b: "B. 6 and 3", c: "C. 10 and 21", d: "D. 31 and 41", answer: "D. 31 and 41", points: 20)
question13 = Question.create(prompt: "If 3x − y = 12, what is the value of 8^x/2^y ?", a: "A. 2^12", b: "B. 4^4", c: "C. 8^2", d: "D. The value cannot be determined from the information given.", answer: "A. 2^12", points: 20)
question14 = Question.create(prompt: "If y = kx, where k is a constant, and y = 24 when x = 6, what is the value of y when x = 5?", a: "A. 6", b: "B. 15", c: "C. 20", d: "D. 23", answer: "C. 20", points: 5)
question15 = Question.create(prompt: "If 16 + 4x is 10 more than 14, what is the value of 8x?", a: "A. 2", b: "B. 6", c: "C. 16", d: "D. 80", answer: "C. 16", points: 5)
question16 = Question.create(prompt: "[1 decagram = 10 grams] and [1,000 milligrams = 1 gram] A hospital stores one type of medicine in 2-decagram containers. Based on the information given, how many 1-milligram doses are there in one 2-decagram container?", a: "A. 0.002", b: "B. 200", c: "C. 2,000", d: "D. 20,000", answer: "D. 20,000", points: 5)
question17 = Question.create(prompt: "For what value of n is |n−1| + 1 equal to 0?", a: "A. 0", b: "B. 1", c: "C. 2", d: "D. There is no such value of n.", answer: "D. There is no such value of n.", points: 10)
question18 = Question.create(prompt: "Which of the following numbers is NOT a solution of the inequality 3x−5 ≥ 4x−3 ?", a: "A. -1", b: "B. -2", c: "C. -3", d: "D. -5", answer: "A. -1", points: 10)
question19 = Question.create(prompt: "[y < −x + a] and [y>x+b] - In the xy-plane, if (0, 0) is a solution to the system of inequalities above, which of the following relationships between a and b must be true?", a: "A. a > b", b: "B. b > a", c: "C. |a| > |b|", d: "D. a = -b", answer: "A. a > b", points: 20)
question20 = Question.create(prompt: "A food truck sells salads for $6.50 each and drinks for $2.00 each. The food truck’s revenue from selling a total of 209 salads and drinks in one day was $836.50. How many salads were sold that day?", a: "A. 77", b: "B. 93", c: "C. 99", d: "D. 105", answer: "B. 93", points: 20)
question21 = Question.create(prompt: "Alma bought a laptop computer at a store that gave a 20 percent discount off its original price. The total amount she paid to the cashier was p dollars, including an 8% sales tax on the discounted price. Which of the following represents the original price of the computer in terms of p?", a: "A. 0.88p", b: "B. p/0.88", c: "C. (0.8)(1.08)p", d: "D. p/(0.8)(1.08)", answer: "D. p/(0.8)(1.08)", points: 20)
question22 = Question.create(prompt: "Which of the following is an equation of a circle in the xy-plane with center (0,4) and a radius with endpoints (4/3,5) ?", a: "A. x^2 + (y-4)^2 = 25/9", b: "B. x^2 + (y+4)^2 = 25/9", c: "C. x^2 + (y-4)^2 = 5/3", d: "D. x^2 + (y+4)^2 = 3/5", answer: "A. x^2 + (y-4)^2 = 25/9", points: 20)
question23 = Question.create(prompt: "Katarina is a botanist studying the production of pears by two types of pear trees. She noticed that Type A trees produced 20 percent more pears than Type B trees did. Based on Katarina’s observation, if the Type A trees produced 144 pears, how many pears did the Type B trees produce?", a: "A. 115", b: "B. 120", c: "C. 124", d: "D. 173", answer: "B. 120", points: 20)
question24 = Question.create(prompt: "For a polynomial p(x), the value of p(3) is −2. Which of the following must be true about p(x)?", a: "A. x−5 is a factor of p(x).", b: "B. x−2 is a factor of p(x).", c: "C. x+2 is a factor of p(x).", d: "D. The remainder when p(x) is divided by x−3 is −2.", answer: "D. The remainder when p(x) is divided by x−3 is −2.", points: 20)

GameQuestion.create(game: game1, question: question1)
GameQuestion.create(game: game1, question: question2)
GameQuestion.create(game: game1, question: question3)
GameQuestion.create(game: game1, question: question4)
GameQuestion.create(game: game1, question: question5)
GameQuestion.create(game: game1, question: question6)
GameQuestion.create(game: game1, question: question7)
GameQuestion.create(game: game1, question: question8)
GameQuestion.create(game: game1, question: question9)
GameQuestion.create(game: game1, question: question10)
GameQuestion.create(game: game1, question: question11)
GameQuestion.create(game: game1, question: question12)
GameQuestion.create(game: game1, question: question13)
GameQuestion.create(game: game1, question: question14)
GameQuestion.create(game: game1, question: question15)
GameQuestion.create(game: game1, question: question16)
GameQuestion.create(game: game1, question: question17)
GameQuestion.create(game: game1, question: question18)
GameQuestion.create(game: game1, question: question19)
GameQuestion.create(game: game1, question: question20)
GameQuestion.create(game: game2, question: question3)
GameQuestion.create(game: game2, question: question4)
GameQuestion.create(game: game1, question: question5)
GameQuestion.create(game: game1, question: question6)
GameQuestion.create(game: game1, question: question7)
GameQuestion.create(game: game1, question: question8)
GameQuestion.create(game: game1, question: question9)
GameQuestion.create(game: game1, question: question10)
GameQuestion.create(game: game1, question: question11)
GameQuestion.create(game: game1, question: question12)
GameQuestion.create(game: game1, question: question13)
GameQuestion.create(game: game1, question: question14)
GameQuestion.create(game: game1, question: question15)
GameQuestion.create(game: game1, question: question16)
GameQuestion.create(game: game1, question: question17)
GameQuestion.create(game: game1, question: question18)
GameQuestion.create(game: game1, question: question19)
GameQuestion.create(game: game1, question: question20)
GameQuestion.create(game: game1, question: question21)
GameQuestion.create(game: game1, question: question22)
GameQuestion.create(game: game1, question: question23)
GameQuestion.create(game: game1, question: question24)